<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="sudhir-PC" failures="0" tests="9" name="Default test" time="2.463" errors="0" timestamp="2023-04-23T15:37:49 IST">
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="-1.682244467439E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated BrowserLaunching.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated BrowserLaunching.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:277)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@BeforeMethod BrowserLaunching" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserLaunching -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="@AfterTest publishReports" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest publishReports -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="RemoveMultipleProductsFromCart" time="0.0">
    <skipped/>
  </testcase> <!-- RemoveMultipleProductsFromCart -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="VerifyChekoutFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyChekoutFunctionality -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="addMultipleProductToCart" time="0.0">
    <skipped/>
  </testcase> <!-- addMultipleProductToCart -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="addProductOnCart" time="0.0">
    <skipped/>
  </testcase> <!-- addProductOnCart -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="removeProductFromCart" time="0.0">
    <skipped/>
  </testcase> <!-- removeProductFromCart -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="verifyLogInFunctionality" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLogInFunctionality -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="verifyLogInFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogInFunctionality -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="verifyLogInFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogInFunctionality -->
  <testcase classname="test.TestCasesForFunctionalityOfSwagLabs" name="verifyLogInFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogInFunctionality -->
</testsuite> <!-- Default test -->
